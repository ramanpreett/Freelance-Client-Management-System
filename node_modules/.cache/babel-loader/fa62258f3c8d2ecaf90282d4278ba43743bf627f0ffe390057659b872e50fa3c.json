{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Desktop\\\\project\\\\client\\\\src\\\\components\\\\Clients.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ClientForm from \"./ClientForm\";\nimport ClientList from \"./ClientList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL + \"/clients\";\nconst Clients = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [error, setError] = useState(\"\");\n  const fetchClients = async () => {\n    try {\n      const res = await axios.get(API_URL, {\n        headers: {\n          Authorization: localStorage.getItem(\"token\")\n        }\n      });\n      setClients(res.data);\n      setError(\"\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message);\n      console.error(\"Fetch clients error:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchClients();\n  }, []);\n  const addClient = async client => {\n    try {\n      await axios.post(API_URL, client, {\n        headers: {\n          Authorization: localStorage.getItem(\"token\")\n        }\n      });\n      fetchClients();\n      setError(\"\");\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message);\n      console.error(\"Add client error:\", err);\n    }\n  };\n  const deleteClient = async id => {\n    await axios.delete(`${API_URL}/${id}`, {\n      headers: {\n        Authorization: localStorage.getItem(\"token\")\n      }\n    });\n    fetchClients();\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bg-white rounded shadow p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-2\",\n      children: \"Clients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 mb-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ClientForm, {\n      onSave: addClient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClientList, {\n      clients: clients,\n      onDelete: deleteClient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Clients, \"PzvN/na3hQ9bbJdkR1VqttHJspE=\");\n_c = Clients;\nexport default Clients;\nvar _c;\n$RefreshReg$(_c, \"Clients\");","map":{"version":3,"names":["React","useEffect","useState","axios","ClientForm","ClientList","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","Clients","_s","clients","setClients","error","setError","fetchClients","res","get","headers","Authorization","localStorage","getItem","data","err","_err$response","_err$response$data","response","message","console","addClient","client","post","_err$response2","_err$response2$data","deleteClient","id","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/raman/OneDrive/Desktop/project/client/src/components/Clients.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ClientForm from \"./ClientForm\";\r\nimport ClientList from \"./ClientList\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL + \"/clients\";\r\n\r\nconst Clients = () => {\r\n  const [clients, setClients] = useState([]);\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const fetchClients = async () => {\r\n    try {\r\n      const res = await axios.get(API_URL, { headers: { Authorization: localStorage.getItem(\"token\") } });\r\n      setClients(res.data);\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || err.message);\r\n      console.error(\"Fetch clients error:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchClients();\r\n  }, []);\r\n\r\n  const addClient = async (client) => {\r\n    try {\r\n      await axios.post(API_URL, client, { headers: { Authorization: localStorage.getItem(\"token\") } });\r\n      fetchClients();\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || err.message);\r\n      console.error(\"Add client error:\", err);\r\n    }\r\n  };\r\n\r\n  const deleteClient = async (id) => {\r\n    await axios.delete(`${API_URL}/${id}`, { headers: { Authorization: localStorage.getItem(\"token\") } });\r\n    fetchClients();\r\n  };\r\n\r\n  return (\r\n    <section className=\"bg-white rounded shadow p-4\">\r\n      <h2 className=\"text-xl font-semibold mb-2\">Clients</h2>\r\n      {error && <div className=\"text-red-500 mb-2\">{error}</div>}\r\n      <ClientForm onSave={addClient} />\r\n      <ClientList clients={clients} onDelete={deleteClient} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Clients;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}